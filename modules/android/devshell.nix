{ sdkArgs, cfg }:
pkgs:
let
  androidComposition = pkgs.androidenv.composeAndroidPackages sdkArgs;
  androidSdk = androidComposition.androidsdk;
  ANDROID_HOME = "${androidSdk}/libexec/android-sdk";
  # NOTE: not sure why `avdmanager` is warningabout `ndk` and `nkd-bundle` both existing.
  ANDROID_NDK_ROOT = "${ANDROID_HOME}/ndk/";
  os = builtins.elemAt (builtins.split "-" pkgs.stdenv.system) 2;
in
{
  packages = with pkgs; [
    androidSdk # reference our own sdk settings
    # gradle
    # hard code to 8.8 for now
    # TODO figure out how to get android's `gradlew to use gradle from nix
    # instead of managing gradle itself
    gradle_8_8
  ];

  # Environment variables
  env = with pkgs; {
    ANDROID_HOME = ANDROID_HOME;
    ANDROID_SDK_ROOT = ANDROID_HOME;
    ANDROID_NDK_ROOT = ANDROID_NDK_ROOT;

    GRADLE_HOME = "${gradle_8_8}";
    GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${androidSdk}/libexec/android-sdk/build-tools/${lib.head cfg.buildTools.versions}/aapt2";
    # emulator related: vulkan-loader and libGL shared libs are necessary for hardware decoding
    LD_LIBRARY_PATH = "${
      lib.makeLibraryPath [
        vulkan-loader
        libGL
      ]
    }:${ANDROID_HOME}/build-tools/${lib.head cfg.buildTools.versions}/lib64/
           :${ANDROID_NDK_ROOT}/${lib.head cfg.ndk.versions}/toolchains/llvm/prebuilt/${os}-x86_64/lib/
          :$LD_LIBRARY_PATH";
    # For now, it seems only x86_64 is available for prebuilt llvm libraries
    # TODO: fix bug where ndk.versions is an empty list
  };

  shellHook = ''
    set -e

    # tools is deprecated? I think it's replaced by command-line-tools? Add it here anyway
    export PATH="$PATH:$ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"

    # Create a local properites file for Android Studio to read.
    # Haven't tested Android Studio with this, so not sure it works.

    # TODO move this into android directory
    # TODO add lgoic so we only do this if flutter is not enabled
    #   cat <<EOF > local.properties
    #   # This file was automatically generated by nix-shell.
    #   sdk.dir=$ANDROID_HOME
    #   ndk.dir=$ANDROID_NDK_ROOT
    #   EOF

    export ANDROID_USER_HOME=$(pwd)/.android
    export ANDROID_AVD_HOME=$(pwd)/.android/avd

    test -e "$ANDROID_USER_HOME" || mkdir -p "$ANDROID_USER_HOME"
    test -e "$ANDROID_AVD_HOME" || mkdir -p "$ANDROID_AVD_HOME"
    set +e
  '';
}
